@using Microsoft.AspNetCore.Antiforgery
@model JokesApp.Web.Models.Jokes.CreateJokeInputModel
@inject IAntiforgery AF

@{
    this.ViewData["Title"] = "Create";
    var categories = (this.ViewData["Categories"] as IEnumerable<SelectListItem>);
}

<h1>@this.ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Content"></label>
                <textarea asp-for="Content" class="form-control" rows="6"></textarea>
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId"></label>
                <select asp-for="CategoryId" asp-items="@categories" class="form-control"></select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
                <input value="Suggest category" style="cursor:pointer" class="btn btn-secondary" id="CategorizeButton" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="Home" asp-action="Index">Back to Index</a>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $("#CategorizeButton").click(function () {
            var joke = $("#Content").val();
            var aft = "@AF.GetTokens(this.Context).RequestToken";
            $.ajax({
                type: "POST",
                url: "/Jokes/SuggestCategory",
                data: { joke: joke },
                success: function(data) {
                    $("#SuggestedCategory").html("Suggested category: " + data.categoryName);
                    $("#CategoryId").val(data.categoryId);
                }
            });
        });
    </script>
}
