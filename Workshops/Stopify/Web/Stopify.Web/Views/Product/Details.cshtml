@model ProductDetailsViewModel

@{
    this.ViewData["Title"] = this.Model.Name;
}

<!--Section: Block Content-->
<section class="m-5">
    <div class="row">
        <div class="col-md-6 mb-4 mb-md-0">
            <div id="mdb-lightbox-ui"></div>

            <div>
                <div class="row mx-1">
                    <div class="col-10 mb-0">
                        <figure class="rounded" id="product-image-container">
                            <a href="@this.Model.PictureUri"> <img src="@this.Model.PictureUri" class="img-fluid" alt="@this.Model.Name"></a>
                            @if (this.Model.Sold)
                            {
                                <img id="sold" src="~/img/sold.png" class="img-fluid" alt="sold">
                            }
                        </figure>

                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <h5>@this.Model.Name</h5>
            <p class="mb-2 text-muted text-uppercase small">@this.Model.TypeName</p>
            <form asp-controller="Vote" asp-action="Post">
                <ul id="ratings" class="ratings">
                    @for (var i = GlobalConstants.MaxRating; i > this.Model.FullStars; i--)
                    {
                        <li onclick="vote(@i, '@this.Model.Id')" class="star far fa-star"></li>
                    }

                    @for (var i = this.Model.FullStars; i > 0; i--)
                    {
                        <li onclick="vote(@i, '@this.Model.Id')" class="star fa fa-star"></li>
                    }
                </ul>
            </form>
            <p class="mt-2"><span class="mr-1"><strong>$@this.Model.Price.ToString(GlobalConstants.CurrencyFormatter)</strong></span></p>
            <p class="pt-1">
                @this.Model.Name @*TODO: Add description to Product entity and description can be used here*@
            </p>
            <div class="table-responsive">
                @*
                    If additional properties are present in the future
                    <table class="table table-sm table-borderless mb-0">
                        <tbody>
                            <tr>
                                <th class="pl-0 w-25" scope="row"><strong>Model</strong></th>
                                <td>Shirt 5407X</td>
                            </tr>
                            <tr>
                                <th class="pl-0 w-25" scope="row"><strong>Color</strong></th>
                                <td>Black</td>
                            </tr>
                            <tr>
                                <th class="pl-0 w-25" scope="row"><strong>Delivery</strong></th>
                                <td>USA, Europe</td>
                            </tr>
                        </tbody>
                    </table>*@
            </div>

            <hr>

            @if (!this.Model.Sold)
            {
                <a class="btn btn-outline-primary btn-primary border-dark hover mx-1" asp-area="" asp-controller="Product" asp-action="Buy" asp-route-id="@this.Model.Id" type="button">Buy now</a>
                <a class="btn btn-outline-primary text-dark border-dark hover mx-1" data-toggle="modal" data-target="#buyConfirmationModal">
                    <i class="fa fa-shopping-cart p-0"></i>
                    Add to cart
                </a>
            }

            @if (this.User.IsInRole("Admin"))
            {
                <a class="btn btn-outline-warning btn-warning text-dark hover mx-1" asp-area="Administration" asp-controller="Product" asp-action="Edit" asp-route-productId="@this.Model.Id" type="button">Edit</a>
                <a class="btn btn-outline-danger btn-danger text-dark hover mx-1" data-toggle="modal" data-target="#deleteConfirmationModal">
                    <i class="fa fa-shopping-cart p-0"></i>
                    Delete
                </a>
            }
        </div>
    </div>

</section>

<script>

    function drawStars(rating, productId) {
        let ratingsElement = document.getElementById('ratings');
        ratingsElement.innerHTML = '';

        let fullStars = Math.ceil(rating);

        for (let i = 5; i > fullStars; i--) {
            ratingsElement.innerHTML += `<li onclick="vote(${i}, '${productId}')" class="star far fa-star"></li>`;
        }

        for (let i = fullStars; i > 0; i--) {
            ratingsElement.innerHTML += `<li onclick="vote(${i}, '${productId}')" class="star fa fa-star"></li>`;
        }
    }

    async function vote(score, productId) {
        const csrfTokenElement = document.getElementsByName("__RequestVerificationToken")[0];

        const json = {
            score: score,
            productId: productId
        };

        const appUrl = "https://localhost:5001/api/vote";

        try {
            const response = await window.fetch(appUrl, {
                method: "post",
                headers: {
                    'RequestVerificationToken': csrfTokenElement.value,
                    'Accept': "application/json",
                    'Content-Type': "application/json"
                },
                body: JSON.stringify(json)
            });

            const data = await response.json();

            console.log(data);

            drawStars(data.rating, productId);

        } catch (err) {
            console.log(err);
        }
    }

    $(function () {
        var star = '.star',
            selected = '.selected';

        $(star).on('click', function () {
            $(selected).each(function () {
                $(this).removeClass('fa');
            });
            $(this).addClass('fa');
        });
    });
</script>

<partial name="_ConfirmationAddToCart" />
<partial name="_ConfirmationDelete" />
