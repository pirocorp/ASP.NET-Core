@model CartViewModel

@{
    this.ViewData["Title"] = "Shopping Cart";
}

<div class="container mb-4">
    <div class="row">
        <div class="col-12">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                    <tr>
                        <th scope="col"> </th>
                        <th scope="col">Product</th>
                        <th scope="col" class="text-right">Price</th>
                        <th> </th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in this.Model.Products)
                    {
                        <tr onclick="deleteProduct(event, '@item.Id');">
                            <td>
                                <img src="@($"{this.Model.ImageTransformation}{item.PictureUri}")" alt="@item.Name"/>
                            </td>
                            <td>@item.Name</td>
                            <td class="text-right">@item.Price</td>
                            <td class="text-right">
                                <button class="btn btn-sm btn-danger">
                                    <i class="fa fa-trash"></i>
                                </button>
                            </td>
                        </tr>
                    }
                    <tr>
                        <td></td>
                        <td></td>
                        <td><strong>Amount</strong></td>
                        <td class="text-right"><strong id="total-amount">@this.Model.Total.ToString("F2")</strong></td>
                    </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col mb-2">
            <div class="row">
                <div class="col-sm-12  col-md-6">
                    <a asp-controller="Home" asp-action="Index" class="btn btn-block btn-light">Continue Shopping</a>
                </div>
                <div class="col-sm-12 col-md-6 text-right">
                    <form method="post" asp-controller="Order" asp-action="Checkout">
                        <input type="hidden" name="id" value="@this.Model.Id"/>
                        <input type="submit" class="btn btn-lg btn-block btn-success text-uppercase" value="Checkout">
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    async function removeProduct(id) {
        const location = window.location.hostname;
        const csrfName = '__RequestVerificationToken';
        const csrfToken = document.getElementsByName(csrfName)[0].value;

        const body = {
            productId: id
        };

        const settings = {
            method: 'POST',
            mode: 'cors',
            headers: {
                'RequestVerificationToken': csrfToken,
                'Accept': 'text/html',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(body)
        };

        try {
            const fetchResponse = await fetch(`https://${location}:5001/Order/Remove`, settings);
            const data = await fetchResponse.json();
            return data;
        } catch (e) {
            console.error(e.message);
        } 
    }

    async function deleteProduct(event, id) {
        let trElement = event.currentTarget;

        let data = await removeProduct(id);

        trElement.parentNode.removeChild(trElement);
        let totalAmountElement = document.getElementById('total-amount');
        totalAmountElement.textContent = data;
    }
</script>