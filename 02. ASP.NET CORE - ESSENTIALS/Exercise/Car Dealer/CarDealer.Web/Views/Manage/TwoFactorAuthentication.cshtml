@model CarDealer.Web.ViewModels.Manage.TwoFactorAuthenticationViewModel
@{
    this.ViewData["Title"] = "Two-factor authentication";
    this.ViewData.AddActivePage(ManageNavPages.TwoFactorAuthentication);
}

<h4>@(this.ViewData["Title"])</h4>
@if (this.Model.Is2FaEnabled)
{
    if (this.Model.RecoveryCodesLeft == 0)
    {
        <div class="alert alert-danger">
            <strong>You have no recovery codes left.</strong>
            <p>You must <a asp-action="GenerateRecoveryCodes">generate a new set of recovery codes</a> before you can log in with a recovery code.</p>
        </div>
    }
    else if (this.Model.RecoveryCodesLeft == 1)
    {
        <div class="alert alert-danger">
            <strong>You have 1 recovery code left.</strong>
            <p>You can <a asp-action="GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
        </div>
    }
    else if (this.Model.RecoveryCodesLeft <= 3)
    {
        <div class="alert alert-warning">
            <strong>You have @(this.Model.RecoveryCodesLeft) recovery codes left.</strong>
            <p>You should <a asp-action="GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
        </div>
    }

    <a asp-action="Disable2FaWarning" class="btn btn-default">Disable 2FA</a>
    <a asp-action="GenerateRecoveryCodesWarning" class="btn btn-default">Reset recovery codes</a>
}

<h5>Authenticator app</h5>
@if (!this.Model.HasAuthenticator)
{
    <a asp-action="EnableAuthenticator" class="btn btn-default">Add authenticator app</a>
}
else
{
    <a asp-action="EnableAuthenticator" class="btn btn-default">Configure authenticator app</a>
    <a asp-action="ResetAuthenticatorWarning" class="btn btn-default">Reset authenticator key</a>
}

@section Scripts {
    @await this.Html.PartialAsync("_ValidationScriptsPartial")
}
